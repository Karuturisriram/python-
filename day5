password validator
password=input("ENTER THE PASSWORD")
uc,lc,d,sp,cc=1,1,1,1,0
fc=0
c=0
sp_count=0
l=len(password)
if not l>=6 and l<22:
    c=1
for i in range(l):
    if password[i].isupper():
       uc=0
    if password[i].islower():
       lc=0
    if password[i].isdigit():
       d=0
    if password[i] in "!@#$%^&*":
       sp_count+=1
    if sp_count>=2:
       sp=0
    if i+1<l and password[i]==password:
        cc=1
fc+=uc+lc+d+sp+cc+c
print(fc)              

s="malayalam"
i,j=0,len(s)-1
while i<=j:
    if s[i]!=s[j]:
        print(False)
        break
    i+=1
    j-=1
else:
    print(True)

s=input()
s.isalnum()
i,j=0,len(s-1)
while i<=j:
    if s[i]!=s[j]:
        print(False)
        break
    i+=1
    j-=1
else:
    print(True)
    
roman number
s=input()
d={
    m=1000,D=500,C=100,L=50,X=10,V=5,I=1
}
''19/09/2025''
valid palindrome II
s=input()
i,j=0,len(s)-1
while i<=j:
    if s[i]!=s[j]:
        s1=s[:i]+s[i+1:]
        s2=s[:j]+s[j+1:]
        if s1==s1[::-1] or s2==s2[::-1]:
            print(True)
        else:
            print(False)
        break
    i+=1
    j-=1

REVERSE VOWELS OF THE STRING
vowels="aeiouAEIOU"
s=input()
s=list(s)
i,j=0,len(s)-1
while i<j:
    if s[i] not in vowels:
        i+=1
    elif s[j] not in vowels:
        j-=1
    else:
        s[i],s[j]=s[j],s[i]
        i+=1
        j-=1
print("".join(s))

length of the longest palindrome
s="abba"
m=0
for c in range(len(s)):
    l,r=c,c
    while l>=0 and r<len(s) and s[l]==s[r]:
        m=max(m,r-l+1)
        l-=1
        r+=1
    l,r=c,c+1
    while l>=0 and r<len(s) and s[l]==s[r]:
        m=max(m,r-l+1)
        l-=1
        r+=1
print(m)
find square of the number using lamda  function
s=lambda n:n*n
n=int(input())
res=s(n)
print(res)
#
f=lambda a,b:a+b
n=int(input())
m=int(input())
result=f(n,m)
print(result)
#filtering even numbers
def even(n):
    return n%2==0 
nums=[1,2,3,4,5,6,7,8,9,10]
evens=list(filter(even,nums))
print(evens)
filter lambda
nums=[1,2,3,4,5,6,7,8,9,10]
# evens=list(filter(lambda n:n%2==0,nums))
# print(evens)

def update(n):
    return n*2
nums=[1,2,3,4,5,6,7,8,9]
evens=list(map(update,nums)) 
doubles=list(map(update,evens))
print(doubles)
